% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/katss.R
\name{enrichments}
\alias{enrichments}
\title{Calculate k-mer enrichments}
\usage{
enrichments(
  testfile,
  ctrlfile = NULL,
  kmer = 3,
  algo = c("normal", "shuffled", "probabilistic", "shuf+prob"),
  bootstrap_iters = 0,
  sample = 25,
  seed = -1,
  klet = -1,
  sort = TRUE,
  threads = 1
)
}
\arguments{
\item{testfile}{Test sequences. The file has to be of either: raw sequences,
fasta, or fastq format. Works with files using gzip compression. Other file
types are currently unsupported.}

\item{ctrlfile}{Control sequences (optional). Same formats as testfile.}

\item{kmer}{Length of the k-mer to compute enrichments for. Currently, only
k-mers up to length 16 are supported.}

\item{algo}{The algorithm to use for computing enrichments}

\item{bootstrap_iters}{Number of iterations to bootstrap}

\item{sample}{Percent to subsample during bootstrap (should be between 0-100\%)}

\item{seed}{Specify the seed to be used by bootstrap. Since bootstrap
subsamples random sequences, seeding alters which random sequences will be
picked. This helps to ensure deterministic output which can be achieved by
using the same seed. To pick a random seed, set \code{seed=-1}.}

\item{klet}{Specify the k-let length to preserve during shuffling. This only
affects the output is \code{algo="shuffled"} or \code{algo=shuf+prob} is set. -1
chooses the default recommended value.}

\item{sort}{Sort data.frame based on the counts from highest to lowest.
Currently, the output given is sorted alphabeticaly based on kmers.}

\item{threads}{Number of threads to use. Currently not well optimized/not
working.}
}
\value{
data.frame containing the k-mer enrichments
}
\description{
Calculate k-mer enrichments
}
\examples{
# Load data
data(rbfox2_seqs)

# Create raw sequence files
test_file <- tempfile()
ctrl_file <- tempfile()
writeLines(rbfox2_seqs$bound, test_file)
writeLines(rbfox2_seqs$input, ctrl_file)

## Get enrichments when you have a test and control dataset
  # Default configuration
result <- enrichments(test_file, ctrl_file)
head(result)
  # Modify the k-mer length
result <- enrichments(test_file, ctrl_file, kmer = 5)
head(result)


## Get the enrichments without a control
  # Shuffling (preferred)
result <- enrichments(test_file, algo="shuffled", kmer = 5)
head(result)
  # Shuffling with custom k-let
result <- enrichments(test_file, algo="shuffled", kmer = 5, klet = 5)
head(result)
  # Probabilistic
result <- enrichments(test_file, algo="probabilistic", kmer = 5)
head(result)


## Enabling bootstrap
  # Bootstrap on regular enrichments for 100 iterations
result <- enrichments(test_file, ctrl_file, bootstrap_iters = 100)
head(result)
  # Setting the sample size to be 55.55\% of sequences per bootstrap iteration
result <- enrichments(test_file, ctrl_file, bootstrap_iters = 100, sample = 55.55)
head(result)
  # Bootstrap shuffled where kmer = klet
result <- enrichments(test_file, algo = "shuffled", bootstrap_iters = 100, kmer = 5, klet = 5)
head(result)

# Cleanup files
unlink(test_file)
unlink(ctrl_file)
}
